╔══════════════════════════════════════════════════════════════╗
║         FAB CITY WIDGET DEPLOYMENT - QUICK CHECKLIST         ║
╚══════════════════════════════════════════════════════════════╝

📋 STEP-BY-STEP DEPLOYMENT CHECKLIST

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
PART 1: MAIN API (ALREADY DONE ✅)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ Render deployment fixed
✅ "Cannot GET /" error resolved  
✅ API is live and working

Your Render URL: https://your-app.onrender.com

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
PART 2: WIDGET DEPLOYMENT (DO THIS NOW)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

□ STEP 1: Update API URL (2 min)
  ├─ Open: widget.config.js
  ├─ Find: line 6
  ├─ Replace: YOUR-RENDER-APP-NAME
  └─ With: Your actual Render URL

  Example:
  apiUrl: 'https://fabcity-chat-abc123.onrender.com',

□ STEP 2: Build Widget (1 min)
  └─ Run: npm run build:embed
  
  ✓ Creates: dist-embed/fabcity-widget.js
  ✓ Creates: dist-embed/fabcity-widget.css

□ STEP 3: Choose Hosting (pick ONE)

  Option A: NETLIFY (Recommended - Easiest)
    npm install -g netlify-cli
    netlify login
    netlify deploy --dir=dist-embed --prod
    
  Option B: RENDER STATIC SITE
    - Go to dashboard.render.com
    - New + → Static Site
    - Build: npm run build:embed
    - Publish: dist-embed
    
  Option C: VERCEL
    npm install -g vercel
    vercel --prod

□ STEP 4: Copy Widget URLs
  
  Widget JS: https://[your-host]/fabcity-widget.js
  Widget CSS: https://[your-host]/fabcity-widget.css

□ STEP 5: Update Client Guide
  ├─ Open: client-integration.html
  ├─ Find: YOUR-WIDGET-URL (4 occurrences)
  └─ Replace: With your actual widget URL

□ STEP 6: Test Everything
  ├─ Open embed-example.html in browser
  ├─ Update URLs to your hosted widget
  ├─ Click chat button
  ├─ Send test message
  └─ Verify AI response

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
GIVE TO CLIENTS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Option 1: Send client-integration.html
  └─ Update YOUR-WIDGET-URL with your URLs first

Option 2: Send this code snippet:

  <link rel="stylesheet" href="[YOUR-WIDGET-URL]/fabcity-widget.css">
  <script src="[YOUR-WIDGET-URL]/fabcity-widget.js"></script>

  Example:
  <link rel="stylesheet" href="https://fabcity-widget.netlify.app/fabcity-widget.css">
  <script src="https://fabcity-widget.netlify.app/fabcity-widget.js"></script>

Clients paste this BEFORE the </body> tag in their HTML.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
QUICK REFERENCE
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📚 Documentation:
  → DEPLOYMENT_SUMMARY.md      - Complete overview
  → WIDGET_QUICKSTART.md        - Quick guide (start here!)
  → WIDGET_DEPLOYMENT_GUIDE.md  - Detailed guide
  → client-integration.html     - Give to clients

🔗 Your URLs:
  Main API:  https://[your-render-app].onrender.com
  Widget JS: https://[your-widget-host]/fabcity-widget.js
  Widget CSS: https://[your-widget-host]/fabcity-widget.css

🛠️ Build Commands:
  Build main app:   npm run build
  Build widget:     npm run build:embed
  Build both:       npm run build:all

🧪 Testing:
  Local test:       Open embed-example.html
  Check console:    F12 → Console tab
  Check API:        Render dashboard → Logs

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
TROUBLESHOOTING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Widget not showing?
  ✓ Check widget URLs are accessible
  ✓ Verify code before </body> tag
  ✓ Clear browser cache
  ✓ Check browser console for errors

Chat not working?
  ✓ Verify widget.config.js has correct API URL
  ✓ Check Render API is running
  ✓ Check Render logs for errors
  ✓ Verify n8n webhook is working

CORS errors?
  ✓ Add CORS headers to widget hosting
  ✓ See WIDGET_DEPLOYMENT_GUIDE.md → Security section

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎉 THAT'S IT! You're ready to deploy!

Need more details? → Open WIDGET_QUICKSTART.md

Questions? Check the troubleshooting section in guides.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

